// <auto-generated />
using System;
using IndieArtMarketplace.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndieArtMarketplace.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607210825_PostgresInitialCreate")]
    partial class PostgresInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndieArtMarketplace.Models.Artwork", b =>
                {
                    b.Property<int>("ArtworkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("artworkid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArtworkID"));

                    b.Property<int>("ArtistID")
                        .HasColumnType("integer")
                        .HasColumnName("artistid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileURL")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fileurl");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("license");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaddate");

                    b.HasKey("ArtworkID");

                    b.HasIndex("ArtistID");

                    b.ToTable("artworks", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.ClickLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ButtonType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("button_type");

                    b.Property<DateTime>("ClickedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("clicked_at");

                    b.Property<string>("SessionId")
                        .HasColumnType("text")
                        .HasColumnName("session_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("click_logs", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.MusicTrack", b =>
                {
                    b.Property<int>("TrackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("trackid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TrackID"));

                    b.Property<int>("ArtistID")
                        .HasColumnType("integer")
                        .HasColumnName("artistid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileURL")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fileurl");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("license");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaddate");

                    b.HasKey("TrackID");

                    b.HasIndex("ArtistID");

                    b.ToTable("musictracks", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transactionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int?>("ArtworkID")
                        .HasColumnType("integer")
                        .HasColumnName("artworkid");

                    b.Property<int>("BuyerID")
                        .HasColumnType("integer")
                        .HasColumnName("buyerid");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("purchasedate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<int?>("TrackID")
                        .HasColumnType("integer")
                        .HasColumnName("trackid");

                    b.HasKey("TransactionID");

                    b.HasIndex("BuyerID");

                    b.HasIndex("TrackID");

                    b.HasIndex("ArtworkID", "TrackID")
                        .IsUnique();

                    b.ToTable("transactions", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.UploadLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaded_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("upload_logs", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registrationdate");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("UserID");

                    b.ToTable("users", "public");
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.Artwork", b =>
                {
                    b.HasOne("IndieArtMarketplace.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.MusicTrack", b =>
                {
                    b.HasOne("IndieArtMarketplace.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IndieArtMarketplace.Models.Transaction", b =>
                {
                    b.HasOne("IndieArtMarketplace.Models.Artwork", null)
                        .WithMany()
                        .HasForeignKey("ArtworkID");

                    b.HasOne("IndieArtMarketplace.Models.User", null)
                        .WithMany()
                        .HasForeignKey("BuyerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieArtMarketplace.Models.MusicTrack", null)
                        .WithMany()
                        .HasForeignKey("TrackID");
                });
#pragma warning restore 612, 618
        }
    }
}
